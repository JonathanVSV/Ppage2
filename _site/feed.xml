<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-10-16T18:35:41-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jonathan V. Solórzano</title><subtitle>Welcome to my personal site. In this site you can get to know more about my work and check some of my courses and example scripts in R and GEE.</subtitle><author><name>Jonathan V. Solórzano</name></author><entry><title type="html">Map accuracy in R</title><link href="http://localhost:4000/blog/Map-accuracy-in-R/" rel="alternate" type="text/html" title="Map accuracy in R" /><published>2025-03-17T10:34:00-06:00</published><updated>2025-03-17T10:34:00-06:00</updated><id>http://localhost:4000/blog/Map-accuracy-in-R</id><content type="html" xml:base="http://localhost:4000/blog/Map-accuracy-in-R/"><![CDATA[<h1 id="map-accuracy-in-r">Map accuracy in R</h1>

<p>This post will show you how to validate a classification map using the Olofsson et al., 2014 best practices protocol and the <code class="language-plaintext highlighter-rouge">mapaccuracy</code> package.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">mapaccuracy</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span></code></pre></figure>

<h2 id="data">Data</h2>

<p>This data simulates the map accuracy results obtained from a stratified random sampling. This validation procedure is a modification of the Olofsson et al., 2014 recommendations, in which a buffer stratum is used to try to contain omission errors in the rarest classes (i.e., deforestation), following recommendations by Olofsson et al., 2020 and Arévalo et al., 2021.</p>

<p>The two datasets you will need to obtain the validation main results are: area estimates (obtained from cell counting in the classification) and results obtained from the stratified random sampling indicating the map (i.e., classified) and reference (i.e., visual interpretation of field data) classes.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">areas2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="n">Clase</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Forest loss"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Perm Non-forest"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Buff Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Buff Perm Non-forest"</span><span class="p">),</span><span class="w">
                 </span><span class="n">ha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="m">1950</span><span class="p">,</span><span class="w"> </span><span class="m">8000</span><span class="p">,</span><span class="w"> </span><span class="m">50</span><span class="p">,</span><span class="w"> </span><span class="m">25</span><span class="p">))</span><span class="w">

</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="n">Map</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Forest loss"</span><span class="p">,</span><span class="w"> </span><span class="m">50</span><span class="p">),</span><span class="w">
                      </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="m">360</span><span class="p">),</span><span class="w">
                      </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Non-forest"</span><span class="p">,</span><span class="w"> </span><span class="m">90</span><span class="p">),</span><span class="w">
                      </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Buff Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="m">50</span><span class="p">),</span><span class="w">
                      </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Buff Perm Non-forest"</span><span class="p">,</span><span class="w"> </span><span class="m">25</span><span class="p">)),</span><span class="w">
             </span><span class="n">Reference</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Forest loss"</span><span class="p">,</span><span class="w"> </span><span class="m">43</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Non-forest"</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Non-forest"</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="m">350</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Non-forest"</span><span class="p">,</span><span class="w"> </span><span class="m">81</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="m">9</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Buff Perm Forest"</span><span class="p">,</span><span class="w"> </span><span class="m">48</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Forest loss"</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">),</span><span class="w">
                            </span><span class="nf">rep</span><span class="p">(</span><span class="s2">"Buff Perm Non-forest"</span><span class="p">,</span><span class="w"> </span><span class="m">25</span><span class="p">)))</span></code></pre></figure>

<h2 id="process">Process</h2>

<p>Convert area estimates to a vector with names and calculate the total area.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">areas</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">areas2</span><span class="o">$</span><span class="n">ha</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">areas</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">areas2</span><span class="o">$</span><span class="n">Clase</span><span class="w">

</span><span class="n">totalarea</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">areas2</span><span class="o">$</span><span class="n">ha</span><span class="p">)</span></code></pre></figure>

<p>Then, let’s calculate the map accuracy estimates using Olofsson et al., 2014 equations.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">resul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">olofsson</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">Reference</span><span class="p">,</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">Map</span><span class="p">,</span><span class="w"> </span><span class="n">Nh</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">areas</span><span class="p">)</span></code></pre></figure>

<p>Here, the results object contains estimates such as: Overall accuracy, User’s accuracy, Producer’s accuracy, unbiased area estimates (as proportion), Standard error of the accuracies (overall, user’s and producer’s) and area estimates, and the matrix expressed in area weights.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">resul</span><span class="w">
</span><span class="c1"># $OA</span><span class="w">
</span><span class="c1"># [1] 0.9145696</span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $UA</span><span class="w">
</span><span class="c1"># Forest loss         Perm Forest      Perm Non-forest    Buff Perm Forest </span><span class="w">
</span><span class="c1"># 0.8600000           0.9722222           0.9000000           0.9600000 </span><span class="w">
</span><span class="c1"># Buff Perm Non-forest </span><span class="w">
</span><span class="c1"># 1.0000000 </span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $PA</span><span class="w">
</span><span class="c1"># Forest loss         Perm Forest      Perm Non-forest    Buff Perm Forest </span><span class="w">
</span><span class="c1"># 0.6825397           0.7031153           0.9925057           1.0000000 </span><span class="w">
</span><span class="c1"># Buff Perm Non-forest </span><span class="w">
</span><span class="c1"># 1.0000000 </span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $area</span><span class="w">
</span><span class="c1"># Forest loss         Perm Forest      Perm Non-forest    Buff Perm Forest </span><span class="w">
</span><span class="c1"># 0.0006281157        0.2688268528        0.7232668661        0.0047856431 </span><span class="w">
</span><span class="c1"># Buff Perm Non-forest </span><span class="w">
</span><span class="c1"># 0.0024925224 </span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $SEoa</span><span class="w">
</span><span class="c1"># [1] 0.02542024</span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $SEua</span><span class="w">
</span><span class="c1"># Forest loss         Perm Forest      Perm Non-forest    Buff Perm Forest </span><span class="w">
</span><span class="c1"># 0.049569576         0.008673299         0.031799936         0.027994168 </span><span class="w">
</span><span class="c1"># Buff Perm Non-forest </span><span class="w">
</span><span class="c1"># 0.000000000 </span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $SEpa</span><span class="w">
</span><span class="c1"># Forest loss         Perm Forest      Perm Non-forest    Buff Perm Forest </span><span class="w">
</span><span class="c1"># 0.152157323         0.066365204         0.002328898         0.000000000 </span><span class="w">
</span><span class="c1"># Buff Perm Non-forest </span><span class="w">
</span><span class="c1"># 0.000000000 </span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $SEa</span><span class="w">
</span><span class="c1"># Forest loss         Perm Forest      Perm Non-forest    Buff Perm Forest </span><span class="w">
</span><span class="c1"># 0.0001417231        0.0254198567        0.0254198515        0.0001395522 </span><span class="w">
</span><span class="c1"># Buff Perm Non-forest </span><span class="w">
</span><span class="c1"># 0.0000000000 </span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># $matrix</span><span class="w">
</span><span class="c1"># Forest loss  Perm Forest Perm Non-forest Buff Perm Forest</span><span class="w">
</span><span class="c1"># Forest loss        0.0004287139 4.985045e-05   1.994018e-05               NA</span><span class="w">
</span><span class="c1"># Perm Forest                     NA 1.890163e-01   5.400465e-03               NA</span><span class="w">
</span><span class="c1"># Perm Non-forest                  NA 7.976072e-02   7.178465e-01               NA</span><span class="w">
</span><span class="c1"># Buff Perm Forest      0.0001994018           NA             NA      0.004785643</span><span class="w">
</span><span class="c1"># Buff Perm Non-forest             NA           NA             NA               NA</span><span class="w">
</span><span class="c1"># sum                   0.0006281157 2.688269e-01   7.232669e-01      0.004785643</span><span class="w">
</span><span class="c1"># Buff Perm Non-forest          sum</span><span class="w">
</span><span class="c1"># Forest loss                       NA 0.0004985045</span><span class="w">
</span><span class="c1"># Perm Forest                          NA 0.1944167498</span><span class="w">
</span><span class="c1"># Perm Non-forest                       NA 0.7976071785</span><span class="w">
</span><span class="c1"># Buff Perm Forest                     NA 0.0049850449</span><span class="w">
</span><span class="c1"># Buff Perm Non-forest         0.002492522 0.0024925224</span><span class="w">
</span><span class="c1"># sum                         0.002492522 1.0000000000</span></code></pre></figure>

<p>Afterward, you need to sum some area estimates and errors to merge the buffer classes with the total classes (e.g., Buff Perm Forest with Perm Forest). And calculate the lower and upeer limits of the unbiased area estimates, assuming a normal distribution. The classes you need to sum will vary depending on the sampling design used to validate the map.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">exp_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="n">clase</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">names</span><span class="p">(</span><span class="n">resul</span><span class="o">$</span><span class="n">area</span><span class="p">),</span><span class="w">
                 </span><span class="n">area</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">resul</span><span class="o">$</span><span class="n">area</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">totalarea</span><span class="p">,</span><span class="w">
                 </span><span class="n">SEa</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">resul</span><span class="o">$</span><span class="n">SEa</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">totalarea</span><span class="p">)</span><span class="w">

</span><span class="c1"># Sum errors</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">areaSum</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEaSum</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">

</span><span class="c1"># Perm Forest</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">areaSum</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">area</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">area</span><span class="p">[</span><span class="m">5</span><span class="p">]</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEaSum</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEa</span><span class="p">[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEa</span><span class="p">[</span><span class="m">5</span><span class="p">]</span><span class="w">

</span><span class="c1"># Perm Non-forest</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">areaSum</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">area</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">area</span><span class="p">[</span><span class="m">4</span><span class="p">]</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEaSum</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEa</span><span class="p">[</span><span class="m">3</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEa</span><span class="p">[</span><span class="m">4</span><span class="p">]</span><span class="w">

</span><span class="c1"># Forest loss</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">areaSum</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">area</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w">
</span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEaSum</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exp_df</span><span class="o">$</span><span class="n">SEa</span><span class="p">[</span><span class="m">1</span><span class="p">]</span><span class="w">

</span><span class="n">exp_df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">slice_head</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">LIC</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">areaSum</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1.96</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">SEaSum</span><span class="p">,</span><span class="w">
         </span><span class="n">UIC</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">areaSum</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1.96</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">SEaSum</span><span class="p">)</span><span class="w"> </span></code></pre></figure>

<p>And you get your unbiased area estimates with a confidence interval.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># A tibble: 3 × 7</span><span class="w">
</span><span class="c1"># clase             area    SEa areaSum SEaSum     LIC     UIC</span><span class="w">
</span><span class="c1"># &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;</span><span class="w">
</span><span class="c1"># 1 Forest loss     6.3    1.42     6.3   1.42    3.51    9.09</span><span class="w">
</span><span class="c1"># 2 Perm Forest     2696.  255.    2721.  255.   2222.   3221.  </span><span class="w">
</span><span class="c1"># 3 Perm Non-forest 7254.  255.    7302.  256.   6800.   7805.  </span></code></pre></figure>

<h2 id="references">References</h2>

<p>Arévalo, P., Olofsson, P., &amp; Woodcock, C. E. (2020). Continuous monitoring of land change activities and post-disturbance dynamics from Landsat time series: A test methodology for REDD+ reporting. Remote Sensing of Environment, 238, 111051. https://doi.org/10.1016/j.rse.2019.01.013</p>

<p>Olofsson, P., Foody, G. M., Herold, M., Stehman, S. V., Woodcock, C. E., &amp; Wulder, M. A. (2014). Good practices for estimating area and assessing accuracy of land change. Remote Sensing of Environment, 148, 42–57. https://doi.org/10.1016/j.rse.2014.02.015</p>

<p>Olofsson, P., Arévalo, P., Espejo, A. B., Green, C., Lindquist, E., McRoberts, R. E., &amp; Sanz, M. J. (2020). Mitigating the effects of omission errors on area and area change estimates. Remote Sensing of Environment, 236. https://doi.org/10.1016/j.rse.2019.111492</p>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="map accuracy" /><category term="unbiased area estimates" /><category term="map validation" /><category term="Olofsson" /><category term="stratified random sampling" /><summary type="html"><![CDATA[Map accuracy in R]]></summary></entry><entry><title type="html">Create certificates in R</title><link href="http://localhost:4000/blog/Create-certificates-in-R/" rel="alternate" type="text/html" title="Create certificates in R" /><published>2024-12-13T05:17:00-06:00</published><updated>2024-12-13T05:17:00-06:00</updated><id>http://localhost:4000/blog/Create-certificates-in-R</id><content type="html" xml:base="http://localhost:4000/blog/Create-certificates-in-R/"><![CDATA[<h1 id="create-participation-certificates-in-r">Create participation certificates in R</h1>

<p>This post will show you how to create certificates automatically using R. First, install and load the <code class="language-plaintext highlighter-rouge">labeleR</code> package. I will use <code class="language-plaintext highlighter-rouge">tibble</code> to create the the table containing the names.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">labeleR</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tibble</span><span class="p">)</span></code></pre></figure>

<p>Create or read the table containing the names</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="n">Names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"John Smith"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Alejandra Pérez"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Hans Zimmer"</span><span class="p">))</span></code></pre></figure>

<h1 id="attendees">Attendees</h1>

<p>Create attendees cerficates. Here you can indicate the language of the certificate (Spanish or English), the column name containing the names in df, the name of the Congress, date, hour, signer and logos. If you want to customize the certificate, you can use an Rmd template.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">create_attendance_certificate</span><span class="p">(</span><span class="w">
  </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="p">,</span><span class="w">
  </span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"labeleR_output"</span><span class="p">,</span><span class="w">
  </span><span class="n">filename</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"attendance_certificates"</span><span class="p">,</span><span class="w">
  </span><span class="n">language</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Spanish"</span><span class="w"> </span><span class="p">,</span><span class="w">
  </span><span class="n">name.column</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Names"</span><span class="p">,</span><span class="w">
  </span><span class="c1"># type = "Congress",</span><span class="w">
  </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Congreso Nacional de Geografía "</span><span class="p">,</span><span class="w">
  </span><span class="n">date</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"23/06/2024"</span><span class="p">,</span><span class="w">
  </span><span class="n">hours</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"24"</span><span class="p">,</span><span class="w">
  </span><span class="c1"># freetext = "taught by Professor S. Snape",</span><span class="w">
  </span><span class="n">signer</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Elmer Homero"</span><span class="p">,</span><span class="w">
  </span><span class="n">signer.role</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Organizados"</span><span class="p">,</span><span class="w">
  </span><span class="n">rpic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Rlogo.png"</span><span class="p">,</span><span class="w">
  </span><span class="n">lpic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Rlogo.png"</span><span class="p">,</span><span class="w">
  </span><span class="c1"># keep.files = TRUE, </span><span class="w">
  </span><span class="n">signature.pic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"signEx.png"</span><span class="p">,</span><span class="w">
  </span><span class="n">template</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"miFormato.Rmd"</span><span class="w">
</span><span class="p">)</span></code></pre></figure>

<p>I wanted to customize the template, so the easiest way is to first run the certificates with <code class="language-plaintext highlighter-rouge">keep.files = TRUE</code>. This will add the template Rmarkdown file to the output folder. You can copy paste this file and modify it at your will (knowing a little laTex). The following template enables adding a background image for the template. Notice that you could modify the spaces and area between the text.</p>

<p>Here is the code for the template in latex (since output is pdf).</p>

<figure class="highlight"><pre><code class="language-latex" data-lang="latex">---
title: ''
geometry: "left=2cm,right=2cm,top=1cm,bottom=1cm"
output:
  pdf<span class="p">_</span>document: default
header-includes: <span class="k">\usepackage</span><span class="p">{</span>tikz<span class="p">}</span>
classoption: landscape
params:
  name.column.i: ""
  type: ""
  title: ""
  date: ""
  hours: ""
  freetext: ""
  signer: ""
  signer.role: ""
---

<span class="nt">\begin{center}</span>
<span class="k">\pagenumbering</span><span class="p">{</span>gobble<span class="p">}</span>

<span class="nt">\begin{tikzpicture}</span>[remember picture,overlay]
<span class="c">% draw image</span>
<span class="k">\node</span><span class="na">[inner sep=0]</span> at (current page.center)
<span class="p">{</span><span class="k">\includegraphics</span><span class="na">[width=\paperwidth,height=\paperheight]</span><span class="p">{</span>D:/Drive/Jonathan<span class="p">_</span>trabaggio/Doctorado/R/Sandbox/background.jpg<span class="p">}}</span>;
<span class="nt">\end{tikzpicture}</span>

<span class="c">% logos %</span>
<span class="k">\includegraphics</span><span class="na">[height=3cm]</span><span class="p">{</span>lpic.png<span class="p">}</span> 
<span class="k">\hfill</span>
<span class="k">\includegraphics</span><span class="na">[height=3cm]</span><span class="p">{</span>rpic.png<span class="p">}</span>
<span class="k">\linebreak</span>
<span class="k">\vfill</span>

<span class="p">{</span><span class="k">\fontsize</span><span class="p">{</span>40pt<span class="p">}{</span>40pt<span class="p">}</span><span class="k">\selectfont\bf</span> Certificado de asistencia<span class="p">}</span> 
<span class="k">\vfill</span>

<span class="p">{</span><span class="k">\fontsize</span><span class="p">{</span>40pt<span class="p">}{</span>40pt<span class="p">}</span><span class="k">\selectfont</span> `r params<span class="p">$</span><span class="nb">name.column.i` </span><span class="p">}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
</span><span class="nv">\vfill</span><span class="nb">

</span><span class="nv">\Large</span><span class="nb">

ha asistido al `r params</span><span class="p">$</span>type` <span class="p">{</span><span class="k">\bf</span> `r params<span class="p">$</span><span class="nb">title`</span><span class="p">}</span><span class="nb"> </span><span class="nv">\\</span><span class="nb">
</span><span class="nv">\vfill</span><span class="nb">

`r params</span><span class="p">$</span>freetext` <span class="k">\\</span>
<span class="k">\vfill</span>

con fecha `r params<span class="p">$</span><span class="nb">date` </span><span class="nv">\\</span><span class="nb">
</span><span class="nv">\vfill</span><span class="nb">

y una duración de `r params</span><span class="p">$</span>hours` hora(s). <span class="k">\\</span>
<span class="k">\vfill</span>

<span class="c">% firma %</span>
Firmado por: <span class="k">\\</span>
<span class="k">\vfill</span>
<span class="k">\includegraphics</span><span class="na">[height=2cm]</span><span class="p">{</span>spic.png<span class="p">}</span><span class="k">\\</span>
`r params<span class="p">$</span><span class="nb">signer` </span><span class="nv">\\</span><span class="nb">
`r params</span><span class="p">$</span>signer.role` <span class="k">\\</span>

<span class="nt">\end{center}</span>
<span class="k">\pagebreak</span></code></pre></figure>

<p>Once the past code is run with the corresponding template. This is the result</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/certificate.png"><img src="http://localhost:4000/assets/images/certificate.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Certificate.</p>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="certificates" /><category term="labeleR" /><category term="labels" /><category term="participation" /><category term="attendance" /><summary type="html"><![CDATA[Create participation certificates in R]]></summary></entry><entry><title type="html">Google Drive in R</title><link href="http://localhost:4000/blog/Google-drive-in-r/" rel="alternate" type="text/html" title="Google Drive in R" /><published>2024-12-13T04:10:00-06:00</published><updated>2024-12-13T04:10:00-06:00</updated><id>http://localhost:4000/blog/Google-drive-in-r</id><content type="html" xml:base="http://localhost:4000/blog/Google-drive-in-r/"><![CDATA[<h1 id="io-data-in-google-drive-in-r">I/O data in Google Drive in R</h1>

<p>This post shows how to connect to your Google Drive API. A very good tutorial can be found here: <a href="https://claudiozandonella.github.io/trackdown/articles/oauth-client-configuration.html">trackdown tutorial</a>.</p>

<p>Here are the main steps</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">googledriveR</span><span class="p">)</span></code></pre></figure>

<h2 id="create-project-in-google-cloud">Create project in Google Cloud</h2>

<p>Go to <a href="https://console.cloud.google.com/">Google Cloud Console</a> and accept terms of use. Then, create a new project, specify name an accept. The tab opnening the projects is right next to Google Cloud logo.</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/GCproject.png"><img src="http://localhost:4000/assets/images/GCproject.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Scatterplot.</p>

<p>Once created, open the project (using the same tab as previous step) and click on the three lines left of the Google Cloud logo, go to APIs &amp; Services and Enabled APIs &amp; services.</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/GCapi.png"><img src="http://localhost:4000/assets/images/GCapi.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Scatterplot.</p>

<p>Next, go to enable apis and services.</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/GCenable.png"><img src="http://localhost:4000/assets/images/GCenable.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Scatterplot.</p>

<p>Then search for google drive api and click on it. An enable button will appear, click on it to enable. Do the same for Google Docs API.</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/GCGDapi.png"><img src="http://localhost:4000/assets/images/GCGDapi.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Scatterplot.</p>

<p>Once both APIS are enabled go back to the APIs &amp; Services menu and click on OAuth consent screen. Then click on external option and create.</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/GCconsent.png"><img src="http://localhost:4000/assets/images/GCconsent.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Scatterplot.</p>

<p>Then, you need to create an app name and associate an email with the app, as well as a developer contact. Next click on add or remove scopes. Activate “…/auth/userinfo.email”  “openid”, “…/auth/drive” and “…/auth/docs”. Finally, update, save changes and accept.</p>

<p>Back in the OAuth consent screen publish app and confirm.</p>

<p>The next step is go to the credentials menu and create a nuew OAuth 2.0 Client IDs. Go to create credentials, OAUth client ID, select application type = Desktop app and set the desired name. Next, the credential will be shown. Click on download json and save file in your local disk.</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/GCcredentials.png"><img src="http://localhost:4000/assets/images/GCcredentials.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Scatterplot.</p>

<p>Next, open RStudio locally, install “usethis” package and use <code class="language-plaintext highlighter-rouge">usethis::edit_r_environ()</code> to modify the environment, which will be run everytime R starts. In this file save the following: <code class="language-plaintext highlighter-rouge">GOOGLEDRIVE_PATH = {location}</code>, setting the location of your json secret instead of {location}.</p>

<p>After this step, save, restart R, and install “googledrive”. And add the following to your script. First time you run the auth configure step, a window will popup asking for permission. Give permissions and you are ready to use Google Drive from R.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">googledrive</span><span class="p">)</span><span class="w">

</span><span class="n">drive_auth_configure</span><span class="p">(</span><span class="n">gargle</span><span class="o">::</span><span class="n">gargle_oauth_client_from_json</span><span class="p">(</span><span class="n">Sys.getenv</span><span class="p">(</span><span class="s2">"GOOGLEDRIVE_PATH"</span><span class="p">)))</span></code></pre></figure>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="google drive" /><category term="cloud storage" /><summary type="html"><![CDATA[I/O data in Google Drive in R]]></summary></entry><entry><title type="html">Extract tables from pdf in R</title><link href="http://localhost:4000/blog/extract-pdf-tables/" rel="alternate" type="text/html" title="Extract tables from pdf in R" /><published>2024-12-12T07:19:00-06:00</published><updated>2024-12-12T07:19:00-06:00</updated><id>http://localhost:4000/blog/extract-pdf-tables</id><content type="html" xml:base="http://localhost:4000/blog/extract-pdf-tables/"><![CDATA[<p>This blog entry will show how to extract tables from a pdf, using tabulizer.
Load necessary packages.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">tabulizer</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span></code></pre></figure>

<p>Read the pdf of interest, indicating the pages in which the table is located.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">table1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">extract_tables</span><span class="p">(</span><span class="s2">"IUCN_mesoamerica_restoration.pdf"</span><span class="p">,</span><span class="w">
                            </span><span class="n">output</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"data.frame"</span><span class="p">,</span><span class="w">
                            </span><span class="n">pages</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">388</span><span class="o">:</span><span class="m">417</span><span class="p">),</span><span class="w"> 
                            </span><span class="n">area</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="p">,</span><span class="w">
                            </span><span class="n">guess</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
                            
</span><span class="p">)</span></code></pre></figure>

<p>Then join tables located in different pages as the same table. Substitute empty cells by NA and locate extra rows based on the NA located in the first column (Familia). Then join extra rows with the previous one.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Unir listas como filas de un mismo dataframe</span><span class="w">
</span><span class="n">exp_table</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">dplyr</span><span class="o">::</span><span class="n">bind_rows</span><span class="p">(</span><span class="n">table1</span><span class="p">)</span><span class="w">
</span><span class="c1"># Sustituir espacios en blanco por NA</span><span class="w">
</span><span class="n">exp_table</span><span class="p">[</span><span class="n">exp_table</span><span class="o">==</span><span class="s2">""</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NA</span><span class="w">
</span><span class="c1"># Ver dónde hay NA en la columna de Familias para identificar filas extra</span><span class="w">
</span><span class="n">inds</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">which</span><span class="p">(</span><span class="nf">is.na</span><span class="p">(</span><span class="n">exp_table</span><span class="o">$</span><span class="n">Familia</span><span class="p">))</span><span class="w">

</span><span class="c1"># PAra esas filas extra pegar el texto con la fila anterior</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">inds</span><span class="p">){</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">exp_table</span><span class="o">$</span><span class="n">Hábitat</span><span class="p">[</span><span class="n">i</span><span class="p">])){</span><span class="w">
    </span><span class="n">exp_table</span><span class="o">$</span><span class="n">Hábitat</span><span class="p">[(</span><span class="n">i</span><span class="m">-1</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">exp_table</span><span class="o">$</span><span class="n">Hábitat</span><span class="p">[(</span><span class="n">i</span><span class="m">-1</span><span class="p">)],</span><span class="w"> </span><span class="n">exp_table</span><span class="o">$</span><span class="n">Hábitat</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="w"> </span><span class="n">collapse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">)</span><span class="w">  
  </span><span class="p">}</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">exp_table</span><span class="o">$</span><span class="n">Distribución</span><span class="p">[</span><span class="n">i</span><span class="p">])){</span><span class="w">
    </span><span class="n">exp_table</span><span class="o">$</span><span class="n">Distribución</span><span class="p">[(</span><span class="n">i</span><span class="m">-1</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">exp_table</span><span class="o">$</span><span class="n">Distribución</span><span class="p">[(</span><span class="n">i</span><span class="m">-1</span><span class="p">)],</span><span class="w"> </span><span class="n">exp_table</span><span class="o">$</span><span class="n">Distribución</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="w"> </span><span class="n">collapse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<p>Finally, export the result to a csv</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Exportar</span><span class="w">
</span><span class="n">exp_table</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="c1"># Quitar columnas con NA en la columna familia</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">Familia</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="c1"># Escribir</span><span class="w">
  </span><span class="n">write.csv</span><span class="p">(</span><span class="s2">"IUCN_ApendiceA1.csv"</span><span class="p">,</span><span class="w">
            </span><span class="n">row.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
            </span><span class="n">fileEncoding</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"UTF-8"</span><span class="p">)</span></code></pre></figure>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="tabulizer" /><category term="pdf" /><category term="extract tables" /><summary type="html"><![CDATA[This blog entry will show how to extract tables from a pdf, using tabulizer. Load necessary packages.]]></summary></entry><entry><title type="html">STAC in R</title><link href="http://localhost:4000/blog/stac/" rel="alternate" type="text/html" title="STAC in R" /><published>2024-09-02T15:35:00-06:00</published><updated>2024-09-02T15:35:00-06:00</updated><id>http://localhost:4000/blog/stac</id><content type="html" xml:base="http://localhost:4000/blog/stac/"><![CDATA[<p>This blog entry will show how to use STAC using R. This example was based on the original <a href="https://stacspec.org/en/tutorials/1-download-data-using-r/">STAC tutorial</a>.</p>

<p>First check data providers in the following link <a href="https://stacspec.org/en/about/datasets/">Datasets</a>.</p>

<p>Then load necessary packages.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">sf</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rstac</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stars</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">purrr</span><span class="p">)</span></code></pre></figure>

<p>In this example we will use Sentinel-2 Collection 1 Level 2A from AWS. Other popular providers are the Microsoft Planetary Computer on https://planetarycomputer.microsoft.com/api/stac/v1. Remember to set the url up to “v1”, i.e., not including the collectino <em>per se</em>.</p>

<p>Define data provider.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">stac_source</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rstac</span><span class="o">::</span><span class="n">stac</span><span class="p">(</span><span class="w">
  </span><span class="s2">"https://earth-search.aws.element84.com/v1"</span><span class="w">
</span><span class="p">)</span></code></pre></figure>

<p>Then, let’s see which collections are available in the endpoint.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">col_quer</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">stac_source</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">rstac</span><span class="o">::</span><span class="n">collections</span><span class="p">()</span></code></pre></figure>

<p>Before running <code class="language-plaintext highlighter-rouge">get_request</code> the request is only represented as a future query. Let’s do the request.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">available_collections</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rstac</span><span class="o">::</span><span class="n">get_request</span><span class="p">(</span><span class="n">col_quer</span><span class="p">)</span><span class="w">
</span><span class="n">available_collections</span></code></pre></figure>

<p>Create a roi or read it from a gpkg file. Need to run at the en <code class="language-plaintext highlighter-rouge">st_bbox</code> to be used in the query. Here I created an example roi.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">roi</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_as_sf</span><span class="p">(</span><span class="n">tibble</span><span class="o">::</span><span class="n">tibble</span><span class="p">(</span><span class="n">lat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">-101.33706520389003</span><span class="p">,</span><span class="m">-101.33706520389003</span><span class="p">,</span><span class="m">-100.79873512576503</span><span class="p">,</span><span class="w"> </span><span class="m">-100.79873512576503</span><span class="p">,</span><span class="w"> </span><span class="m">-101.33706520389003</span><span class="p">),</span><span class="w">
                        </span><span class="n">lon</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">19.589466998816956</span><span class="p">,</span><span class="w"> </span><span class="m">20.0674578405529</span><span class="p">,</span><span class="w"> </span><span class="m">20.0674578405529</span><span class="p">,</span><span class="m">19.589466998816956</span><span class="p">,</span><span class="w"> </span><span class="m">19.589466998816956</span><span class="p">)),</span><span class="w">
         </span><span class="n">coords</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"lat"</span><span class="p">,</span><span class="w"> </span><span class="s2">"lon"</span><span class="p">),</span><span class="w">
         </span><span class="n">crs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">4326</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">st_cast</span><span class="p">(</span><span class="s2">"MULTIPOINT"</span><span class="p">,</span><span class="w"> </span><span class="n">group_or_split</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">st_union</span><span class="p">()</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">st_cast</span><span class="p">(</span><span class="s2">"POLYGON"</span><span class="p">)</span><span class="w"> 

</span><span class="n">roibbox</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">roi</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">st_bbox</span><span class="p">()</span></code></pre></figure>

<p>From the available collections copy and paste the one you are interested in, set the datetime, roi and limit of images.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">executed_stac_query</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rstac</span><span class="o">::</span><span class="n">stac_search</span><span class="p">(</span><span class="w">
  </span><span class="n">q</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">stac_source</span><span class="p">,</span><span class="w">
  </span><span class="n">collections</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"sentinel-2-c1-l2a"</span><span class="p">,</span><span class="w">
  </span><span class="n">bbox</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">roi</span><span class="p">,</span><span class="w">
  </span><span class="n">datetime</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"2021-01-01T00:00:00Z/2021-07-31T23:59:59Z"</span><span class="w">
</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
</span><span class="n">rstac</span><span class="o">::</span><span class="n">get_request</span><span class="p">()</span></code></pre></figure>

<p>See objects included in query. Check names of bands of interest so they can be used in the download step.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">signed_stac_query</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rstac</span><span class="o">::</span><span class="n">items_sign</span><span class="p">(</span><span class="w">
  </span><span class="n">executed_stac_query</span><span class="p">,</span><span class="w">
  </span><span class="n">rstac</span><span class="o">::</span><span class="n">sign_planetary_computer</span><span class="p">()</span><span class="w">
</span><span class="p">)</span><span class="w">
</span><span class="n">signed_stac_query</span></code></pre></figure>

<p>Download images</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">folder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"myfolder"</span><span class="w">

</span><span class="n">rstac</span><span class="o">::</span><span class="n">assets_download</span><span class="p">(</span><span class="n">signed_stac_query</span><span class="p">,</span><span class="w"> 
                       </span><span class="nf">c</span><span class="p">(</span><span class="s2">"nir"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w"> 
                       </span><span class="n">output_dir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">folder</span><span class="p">)</span></code></pre></figure>

<p>Let’s check the files. We’ll need a loop to stack the two bands for a single date and then create a spatiotemporal object, setting the date as the time dimension. This checking can be done using <code class="language-plaintext highlighter-rouge">terra</code> or <code class="language-plaintext highlighter-rouge">stars</code> packages. Here we used <code class="language-plaintext highlighter-rouge">stars</code>.</p>

<p>Finally, let’s plot the first band in the two available dates.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">files</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">list.files</span><span class="p">(</span><span class="n">folder</span><span class="p">,</span><span class="w"> </span><span class="s2">"B08|B04"</span><span class="p">,</span><span class="w"> </span><span class="n">recursive</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">full.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">

</span><span class="c1"># Read only first two images (two dates)</span><span class="w">
</span><span class="n">imgs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">map</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">i</span><span class="p">){</span><span class="w">
  </span><span class="n">read_stars</span><span class="p">(</span><span class="n">files</span><span class="p">[</span><span class="nf">c</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="m">+1</span><span class="p">))],</span><span class="w"> </span><span class="n">proxy</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="p">})</span><span class="w">

</span><span class="c1"># Stack along the time dimension</span><span class="w">
</span><span class="n">imgs2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">imgs</span><span class="p">,</span><span class="w"> </span><span class="n">along</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"time"</span><span class="p">))</span><span class="w">

</span><span class="c1"># See result</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">imgs2</span><span class="p">[</span><span class="m">1</span><span class="p">,,,</span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">])</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/stacstars.png"><img src="http://localhost:4000/assets/images/stacstars.png" alt="styled-image" class="align-center" style="width: 60%;" /></a> Sentinel-2 images showing the first band in two dates.</p>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="rasters" /><category term="Big Data" /><category term="Spatio-Temporal Asset Catalogs" /><category term="Cloud Optimized GeoTiff" /><category term="stac" /><category term="cog" /><summary type="html"><![CDATA[This blog entry will show how to use STAC using R. This example was based on the original STAC tutorial.]]></summary></entry><entry><title type="html">Raster parallel processing in R</title><link href="http://localhost:4000/blog/raster-parallel-processing/" rel="alternate" type="text/html" title="Raster parallel processing in R" /><published>2024-05-29T15:46:00-06:00</published><updated>2024-05-29T15:46:00-06:00</updated><id>http://localhost:4000/blog/raster-parallel-processing</id><content type="html" xml:base="http://localhost:4000/blog/raster-parallel-processing/"><![CDATA[<h1 id="raster-parallel-processing-in-r">Raster parallel processing in R</h1>

<p>This post shows how to parallelize raster processing in R.</p>

<p>First load the required packages</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">raster</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">parallel</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">doParallel</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">foreach</span><span class="p">)</span></code></pre></figure>

<p>Then read a raster example from the terra package</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">r</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">raster</span><span class="p">(</span><span class="n">system.file</span><span class="p">(</span><span class="s2">"ex/elev.tif"</span><span class="p">,</span><span class="w"> </span><span class="n">package</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"terra"</span><span class="p">))</span><span class="w">
</span><span class="n">r</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">stack</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="w"> </span><span class="n">r</span><span class="p">)</span></code></pre></figure>

<p>Initialize cluster and run process in parallel. Notice that inside the <code class="language-plaintext highlighter-rouge">foreach</code> you should indicate the packages that need to be loaded into the parallel processing.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">cls</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeCluster</span><span class="p">(</span><span class="m">2L</span><span class="p">)</span><span class="w">
</span><span class="n">registerDoParallel</span><span class="p">(</span><span class="n">cls</span><span class="p">)</span><span class="w">
</span><span class="n">clust_list_t</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">foreach</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">2</span><span class="p">,</span><span class="w"> 
                        </span><span class="n">.packages</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"raster"</span><span class="p">)</span><span class="w"> </span><span class="o">%dopar%</span><span class="w"> </span><span class="p">{</span><span class="w">
                          </span><span class="k">if</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">1</span><span class="p">){</span><span class="w">
                            </span><span class="n">ras</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">r</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">3</span><span class="w">
                          </span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="w">
                            </span><span class="n">ras</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">r</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">5</span><span class="w">
                          </span><span class="p">}</span><span class="w">
                          
                          </span><span class="nf">return</span><span class="p">(</span><span class="n">ras</span><span class="p">)</span><span class="w">
                        </span><span class="p">}</span></code></pre></figure>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="parallel" /><category term="raster" /><category term="doparallel" /><category term="foreach" /><summary type="html"><![CDATA[Raster parallel processing in R]]></summary></entry><entry><title type="html">Leaflet in R</title><link href="http://localhost:4000/blog/Leaflet-in-r/" rel="alternate" type="text/html" title="Leaflet in R" /><published>2023-11-10T11:42:00-06:00</published><updated>2023-11-10T11:42:00-06:00</updated><id>http://localhost:4000/blog/Leaflet-in-r</id><content type="html" xml:base="http://localhost:4000/blog/Leaflet-in-r/"><![CDATA[<h1 id="leaflet-in-r">Leaflet in R</h1>

<p>This post shows how to build beautiful interactive maps in R using leaflet.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">leaflet</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">sf</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">terra</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">raster</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">RColorBrewer</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">htmlwidgets</span><span class="p">)</span></code></pre></figure>

<h2 id="read-data">Read data</h2>

<p>Here I am reading three different datasets, a polygon (mx_states) and a point (caps) layer, as well as a raster (DEM).</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># States polygons</span><span class="w">
</span><span class="c1"># Data downloaded from http://www.conabio.gob.mx/informacion/gis/?vns=gis_root/dipol/estata/dest22gw</span><span class="w">
</span><span class="n">mx_states</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_read</span><span class="p">(</span><span class="s2">"dest22gw.shp"</span><span class="p">)</span><span class="w">
</span><span class="c1"># DEM</span><span class="w">
</span><span class="c1"># Data downloaded from: http://www.conabio.gob.mx/informacion/gis/?vns=gis_root/dipol/estata/dest22gw</span><span class="w">
</span><span class="n">dem</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rast</span><span class="p">(</span><span class="s2">"filled_demgw.tif"</span><span class="p">)</span><span class="w">
</span><span class="c1"># Capitals</span><span class="w">
</span><span class="c1"># Data downloaded from: https://www.efrainmaps.es/descargas-gratuitas/m%C3%A9xico/</span><span class="w">
</span><span class="n">caps</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_read</span><span class="p">(</span><span class="s2">"México_Ciudades.shp"</span><span class="p">)</span></code></pre></figure>

<h2 id="create-palettes">Create palettes</h2>

<p>Create palettes for the data. Here we are goin to use RcolorBrewer functionalities and some leaflet functions. Also, notice that I am creating two palettes for the DEM. This is a small hack to put the legend in a reverse order (low values in the lower side and higher in the upper one).</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1">## States palette</span><span class="w">
</span><span class="n">coul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">brewer.pal</span><span class="p">(</span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="s2">"PuOr"</span><span class="p">)</span><span class="w"> 
</span><span class="n">pal_st</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">colorRampPalette</span><span class="p">(</span><span class="n">coul</span><span class="p">)(</span><span class="m">33</span><span class="p">)</span><span class="w">
</span><span class="c1">## Dem palette</span><span class="w">
</span><span class="n">coul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">grDevices</span><span class="o">::</span><span class="n">colorRampPalette</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="s2">"#026449"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#12722c"</span><span class="p">,</span><span class="s2">"#d7d17e"</span><span class="p">,</span><span class="w">
                                        </span><span class="s2">"#95400d"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#980802"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#746c69"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#f1f1f1"</span><span class="p">,</span><span class="s2">"#fdfdfd"</span><span class="p">),</span><span class="w">
                                      </span><span class="n">interpolate</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"spline"</span><span class="p">,</span><span class="w">
                                      </span><span class="n">bias</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)(</span><span class="m">256</span><span class="p">)</span><span class="w">
</span><span class="n">pal_dem</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">leaflet</span><span class="o">::</span><span class="n">colorNumeric</span><span class="p">(</span><span class="w">
  </span><span class="nf">c</span><span class="p">(</span><span class="s2">"#026449"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#12722c"</span><span class="p">,</span><span class="s2">"#d7d17e"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"#95400d"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#980802"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#746c69"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#f1f1f1"</span><span class="p">,</span><span class="s2">"#fdfdfd"</span><span class="p">),</span><span class="w">
  </span><span class="n">values</span><span class="p">(</span><span class="n">dem</span><span class="p">),</span><span class="w">
  </span><span class="n">na.color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"transparent"</span><span class="p">,</span><span class="w">
  </span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
  </span><span class="n">reverse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="w">
</span><span class="p">)</span><span class="w">
</span><span class="c1"># Palette hack to invert legend</span><span class="w">
</span><span class="n">pal_dem2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">leaflet</span><span class="o">::</span><span class="n">colorNumeric</span><span class="p">(</span><span class="w">
  </span><span class="nf">c</span><span class="p">(</span><span class="s2">"#026449"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#12722c"</span><span class="p">,</span><span class="s2">"#d7d17e"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"#95400d"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#980802"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#746c69"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#f1f1f1"</span><span class="p">,</span><span class="s2">"#fdfdfd"</span><span class="p">),</span><span class="w">
  </span><span class="n">values</span><span class="p">(</span><span class="n">dem</span><span class="p">),</span><span class="w">
  </span><span class="n">na.color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"transparent"</span><span class="p">,</span><span class="w">
  </span><span class="n">alpha</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
  </span><span class="n">reverse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="w">
</span><span class="p">)</span><span class="w">
</span><span class="c1">## Capitals palette, same as states</span></code></pre></figure>

<h2 id="leaflet-map">Leaflet map</h2>

<p>Then create the leaflet map. First let’s add the polygons.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">mapa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">leaflet</span><span class="o">::</span><span class="n">leaflet</span><span class="p">()</span><span class="w">

</span><span class="c1">## Add Polygons</span><span class="w">
</span><span class="n">mapa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapa</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addPolygons</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mx_states</span><span class="p">,</span><span class="w">
                         </span><span class="n">stroke</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> 
                         </span><span class="n">smoothFactor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.5</span><span class="p">,</span><span class="w"> 
                         </span><span class="n">opacity</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                         </span><span class="n">fillOpacity</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.9</span><span class="p">,</span><span class="w">
                         </span><span class="n">fillColor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">pal_st</span><span class="p">,</span><span class="w">
                         </span><span class="n">weight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="m">0.2</span><span class="p">,</span><span class="w">
                         </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="s2">"black"</span><span class="p">,</span><span class="w">
                         </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"States"</span><span class="p">,</span><span class="w">
                         </span><span class="n">popup</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">mx_states</span><span class="o">$</span><span class="n">NOMGEO</span><span class="p">)</span></code></pre></figure>

<p>Add the raster. Here notice the use of <code class="language-plaintext highlighter-rouge">pal_dem2</code> in <code class="language-plaintext highlighter-rouge">addLegend</code> and sort the values in decreasing order using <code class="language-plaintext highlighter-rouge">labFormat</code>.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1">## Get tange of dem</span><span class="w">
</span><span class="n">minmax</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">range</span><span class="p">(</span><span class="n">raster</span><span class="o">::</span><span class="n">values</span><span class="p">(</span><span class="n">dem</span><span class="p">)[</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">raster</span><span class="o">::</span><span class="n">values</span><span class="p">(</span><span class="n">dem</span><span class="p">))])</span><span class="w">

</span><span class="c1">## Add raster</span><span class="w">
</span><span class="n">mapa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapa</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addRasterImage</span><span class="p">(</span><span class="n">raster</span><span class="o">::</span><span class="n">raster</span><span class="p">(</span><span class="n">dem</span><span class="p">),</span><span class="w"> 
                          </span><span class="n">colors</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal_dem</span><span class="p">,</span><span class="w"> 
                          </span><span class="n">opacity</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.9</span><span class="p">,</span><span class="w">  
                          </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"DEM"</span><span class="p">,</span><span class="w">
                          </span><span class="n">layerId</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"DEM"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addLegend</span><span class="p">(</span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"bottomleft"</span><span class="p">,</span><span class="w"> 
                     </span><span class="n">pal</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal_dem2</span><span class="p">,</span><span class="w"> 
                     </span><span class="n">values</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">minmax</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">minmax</span><span class="p">[</span><span class="m">2</span><span class="p">],</span><span class="w"> </span><span class="m">100</span><span class="p">),</span><span class="w"> </span><span class="c1">#4 categorical maps terra::levels(dem)[[1]]$ID,</span><span class="w">
                     </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Elevación m s.n.m"</span><span class="p">,</span><span class="w">
                     </span><span class="n">labFormat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">labelFormat</span><span class="p">(</span><span class="n">transform</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">sort</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">decreasing</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)))</span><span class="w">
                    </span><span class="c1"># for categorical maps</span><span class="w">
                     </span><span class="c1"># labFormat =  leaflet::labelFormat(</span><span class="w">
                     </span><span class="c1">#   transform = function(x) {</span><span class="w">
                     </span><span class="c1">#     df_eq %&gt;%</span><span class="w">
                     </span><span class="c1">#       dplyr::filter(ID == x) %&gt;%</span><span class="w">
                     </span><span class="c1">#       dplyr::pull(!!sym(key)) </span><span class="w">
                     </span><span class="c1">#   })) </span></code></pre></figure>

<p>Add the points. Here I set a different color to the circle inside the marker.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1">## Points</span><span class="w">
</span><span class="c1">### Create customized markers</span><span class="w">
</span><span class="c1">### Can create in several lists, that's why two lapply are used</span><span class="w">
</span><span class="c1">### In this case we really only need one level</span><span class="w">
</span><span class="n">resul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lapply</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">pal_st</span><span class="p">),</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">j</span><span class="p">){</span><span class="w">
    </span><span class="n">leaflet</span><span class="o">::</span><span class="n">makeAwesomeIcon</span><span class="p">(</span><span class="w">
      </span><span class="n">icon</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"circle"</span><span class="p">,</span><span class="w">
      </span><span class="n">library</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"fa"</span><span class="p">,</span><span class="w">
      </span><span class="n">iconColor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">pal_st</span><span class="p">[</span><span class="n">j</span><span class="p">],</span><span class="w">
      </span><span class="n">markerColor</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"white"</span><span class="p">,</span><span class="w">
      
    </span><span class="p">)</span><span class="w">
  </span><span class="p">})</span><span class="w"> 
</span><span class="c1"># Cast as awesome icon list</span><span class="w">
</span><span class="n">resul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">structure</span><span class="p">(</span><span class="n">resul</span><span class="p">,</span><span class="w"> </span><span class="n">class</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"leaflet_awesome_icon_set"</span><span class="p">)</span><span class="w">

</span><span class="c1">## Add points</span><span class="w">
</span><span class="n">mapa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapa</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addAwesomeMarkers</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">caps</span><span class="p">,</span><span class="w"> 
                               </span><span class="n">icon</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">resul</span><span class="p">,</span><span class="w">
                               </span><span class="n">popup</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">~</span><span class="n">caps</span><span class="o">$</span><span class="n">CIUDAD</span><span class="p">,</span><span class="w">
                               </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Capitals"</span><span class="p">)</span></code></pre></figure>

<p>Add three Esri basemaps</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1">## Base maps</span><span class="w">
</span><span class="n">mapas_base</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Esri.WorldTopoMap"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Esri.WorldImagery"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Esri.WorldGrayCanvas"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Add basemaps</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">provider</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">mapas_base</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">mapa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapa</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addProviderTiles</span><span class="p">(</span><span class="n">provider</span><span class="p">,</span><span class="w"> 
                              </span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">provider</span><span class="p">)</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<p>Add controls and mini map. <code class="language-plaintext highlighter-rouge">OverlayGroups</code> should match the name given for each layer in the previous sections.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Add controls and mini map</span><span class="w">
</span><span class="n">mapa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapa</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addLayersControl</span><span class="p">(</span><span class="n">overlayGroups</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"States"</span><span class="p">,</span><span class="w"> </span><span class="s2">"DEM"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Capitals"</span><span class="p">),</span><span class="w">
                            </span><span class="n">baseGroups</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mapas_base</span><span class="p">,</span><span class="w">
                            </span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"topright"</span><span class="p">,</span><span class="w">
                            </span><span class="n">options</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">leaflet</span><span class="o">::</span><span class="n">layersControlOptions</span><span class="p">(</span><span class="n">collapsed</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">,</span><span class="w">
                                                                    </span><span class="n">hideSingleBase</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addMiniMap</span><span class="p">(</span><span class="n">tiles</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mapas_base</span><span class="p">[[</span><span class="m">1</span><span class="p">]],</span><span class="w"> 
                      </span><span class="n">toggleDisplay</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w">
                      </span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"bottomleft"</span><span class="p">)</span><span class="w"> </span></code></pre></figure>

<p>Add more customizations: change base map, zoom to extent of layers, add globe button to reset zoom level to the 
starting point, add opacity slider.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># More customizations</span><span class="w">
</span><span class="n">mapa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mapa</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="c1"># update base map</span><span class="w">
  </span><span class="n">htmlwidgets</span><span class="o">::</span><span class="n">onRender</span><span class="p">(</span><span class="s2">"
    function(el, x) {
      var myMap = this;
      myMap.on('baselayerchange',
        function (e) {
          myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
        })
    }"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
  </span><span class="c1"># add full extent button</span><span class="w">
  </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addEasyButton</span><span class="p">(</span><span class="n">leaflet</span><span class="o">::</span><span class="n">easyButton</span><span class="p">(</span><span class="w">
    </span><span class="n">icon</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"fa-globe"</span><span class="p">,</span><span class="w"> 
    </span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Zoom to Level 1"</span><span class="p">,</span><span class="w">
    </span><span class="n">onClick</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">leaflet</span><span class="o">::</span><span class="n">JS</span><span class="p">(</span><span class="s2">"function(btn, map){ map.fitBounds([
                                        ["</span><span class="p">,</span><span class="w"> </span><span class="m">14.55712</span><span class="p">,</span><span class="w"> </span><span class="s2">","</span><span class="p">,</span><span class="w"> </span><span class="m">-117.12579</span><span class="p">,</span><span class="w"> </span><span class="s2">"], "</span><span class="p">,</span><span class="w">
                          </span><span class="s2">"["</span><span class="p">,</span><span class="w"> </span><span class="m">32.71876</span><span class="p">,</span><span class="w"> </span><span class="s2">","</span><span class="p">,</span><span class="w"> </span><span class="m">-86.74011</span><span class="p">,</span><span class="w"> </span><span class="s2">"]
                                        ]); }"</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="c1"># opacity slider</span><span class="w">
  </span><span class="n">leaflet</span><span class="o">::</span><span class="n">addControl</span><span class="p">(</span><span class="n">html</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"&lt;input id=\"OpacitySlide\" type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.5\"&gt;"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="c1"># change opacity of the layers</span><span class="w">
  </span><span class="n">htmlwidgets</span><span class="o">::</span><span class="n">onRender</span><span class="p">(</span><span class="w">
    </span><span class="s2">"function(el,x,data){
                     var map = this;
                     var evthandler = function(e){
                        var layers = map.layerManager.getVisibleGroups();
                        console.log('VisibleGroups: ', layers); 
                        console.log('Target value: ', +e.target.value);
                        layers.forEach(function(group) {
                          var layer = map.layerManager._byGroup[group];
                          console.log('currently processing: ', group);
                          Object.keys(layer).forEach(function(el){
                            if(layer[el] instanceof L.Polygon){;
                            console.log('Change opacity of: ', group, el);
                             layer[el].setStyle({fillOpacity:+e.target.value});
                            }
                          });
                        })
                     };
              $('#OpacitySlide').mousedown(function () { map.dragging.disable(); });
              $('#OpacitySlide').mouseup(function () { map.dragging.enable(); });
              $('#OpacitySlide').on('input', evthandler)}
          "</span><span class="p">)</span></code></pre></figure>

<p>Save file as html widget.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">htmlwidgets</span><span class="o">::</span><span class="n">saveWidget</span><span class="p">(</span><span class="n">mapa</span><span class="p">,</span><span class="w"> 
                        </span><span class="s2">"Map1.html"</span><span class="p">)</span></code></pre></figure>

<p>The final result (click on the following image to access the map):</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/leaflet/Map1.html"><img src="http://localhost:4000/assets/images/leafletmap.png" alt="map" class="align-center" style="width: 80%;" /></a> Interactive leaflet map.</p>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="maps" /><category term="interactive maps" /><category term="leaflet" /><category term="html maps" /><summary type="html"><![CDATA[Leaflet in R]]></summary></entry><entry><title type="html">AGB forest sampling calculations</title><link href="http://localhost:4000/blog/AGB-forest-sampling-calculations/" rel="alternate" type="text/html" title="AGB forest sampling calculations" /><published>2023-07-17T11:42:00-06:00</published><updated>2023-07-17T11:42:00-06:00</updated><id>http://localhost:4000/blog/AGB-forest-sampling-calculations</id><content type="html" xml:base="http://localhost:4000/blog/AGB-forest-sampling-calculations/"><![CDATA[<h1 id="agb-forest-sampling-calculations">AGB forest sampling calculations</h1>

<p>This post shows an example of how to calculate some common plot-level variables from a forest sampling.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">BIOMASS</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span></code></pre></figure>

<p>Read data</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Field data with individual tree measures</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"D:/Drive/Jonathan_trabaggio/Doctorado/R/Ayuquila_Degradation/CleanData/df_all.csv"</span><span class="p">,</span><span class="w">
               </span><span class="n">na.strings</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"NA"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Coordinates of each site.</span><span class="w">
</span><span class="n">coords</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"D:/Drive/Jonathan_trabaggio/Doctorado/R/Ayuquila_Degradation/Data/gpscoords.csv"</span><span class="p">)</span></code></pre></figure>

<p>How the headers of the data look like the following for the <code class="language-plaintext highlighter-rouge">df</code> object.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="w">     </span><span class="n">Nombre</span><span class="w">              </span><span class="n">Especie</span><span class="w"> </span><span class="n">Observaciones</span><span class="w"> </span><span class="n">DAP1</span><span class="w"> </span><span class="n">DAP2</span><span class="w"> </span><span class="n">DAP3</span><span class="w"> </span><span class="n">DAP4</span><span class="w"> </span><span class="n">DAP5</span><span class="w"> </span><span class="n">DAP6</span><span class="w"> </span><span class="n">DAP7</span><span class="w"> </span><span class="n">DAP8</span><span class="w"> </span><span class="n">DAP9</span><span class="w"> </span><span class="n">DAP10</span><span class="w"> </span><span class="n">DAP11</span><span class="w">
</span><span class="m">1</span><span class="w">      </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">                 </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">          </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w"> </span><span class="m">3.44</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
</span><span class="m">2</span><span class="w">      </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">                 </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">          </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w"> </span><span class="m">6.81</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
</span><span class="m">3</span><span class="w">  </span><span class="n">lysiloma</span><span class="w"> </span><span class="n">Lysiloma</span><span class="w"> </span><span class="n">divaricatum</span><span class="w">          </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w"> </span><span class="m">3.12</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
</span><span class="m">4</span><span class="w"> </span><span class="n">leocarpus</span><span class="w">      </span><span class="n">Heliocarpus</span><span class="w"> </span><span class="n">sp.</span><span class="w">          </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w"> </span><span class="m">8.72</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
</span><span class="m">5</span><span class="w">    </span><span class="n">muerto</span><span class="w">                 </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">          </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w"> </span><span class="m">4.04</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
</span><span class="m">6</span><span class="w"> </span><span class="n">leocarpus</span><span class="w">      </span><span class="n">Heliocarpus</span><span class="w"> </span><span class="n">sp.</span><span class="w">          </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w"> </span><span class="m">3.34</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">   </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">
  </span><span class="n">DAP12</span><span class="w"> </span><span class="n">DAP13</span><span class="w"> </span><span class="n">DAP14</span><span class="w"> </span><span class="n">DAP15</span><span class="w"> </span><span class="n">DAP16</span><span class="w"> </span><span class="n">DAP17</span><span class="w"> </span><span class="n">DAP18</span><span class="w"> </span><span class="n">DAP19</span><span class="w"> </span><span class="n">DAP20</span><span class="w"> </span><span class="n">DAP21</span><span class="w"> </span><span class="n">DAP22</span><span class="w"> </span><span class="n">DAP23</span><span class="w"> </span><span class="n">DAP24</span><span class="w"> </span><span class="n">Altura</span><span class="w">  </span><span class="n">parcela</span><span class="w">         </span><span class="n">x</span><span class="w">
</span><span class="m">1</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">   </span><span class="m">1.66</span><span class="w"> </span><span class="n">Amacuau1</span><span class="w"> </span><span class="m">19</span><span class="err">°</span><span class="m">53.904</span><span class="w">
</span><span class="m">2</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">   </span><span class="m">4.56</span><span class="w"> </span><span class="n">Amacuau1</span><span class="w"> </span><span class="m">19</span><span class="err">°</span><span class="m">53.904</span><span class="w">
</span><span class="m">3</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">   </span><span class="m">3.65</span><span class="w"> </span><span class="n">Amacuau1</span><span class="w"> </span><span class="m">19</span><span class="err">°</span><span class="m">53.904</span><span class="w">
</span><span class="m">4</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">   </span><span class="m">5.29</span><span class="w"> </span><span class="n">Amacuau1</span><span class="w"> </span><span class="m">19</span><span class="err">°</span><span class="m">53.904</span><span class="w">
</span><span class="m">5</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">   </span><span class="m">2.69</span><span class="w"> </span><span class="n">Amacuau1</span><span class="w"> </span><span class="m">19</span><span class="err">°</span><span class="m">53.904</span><span class="w">
</span><span class="m">6</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">    </span><span class="kc">NA</span><span class="w">   </span><span class="m">3.02</span><span class="w"> </span><span class="n">Amacuau1</span><span class="w"> </span><span class="m">19</span><span class="err">°</span><span class="m">53.904</span><span class="w">
           </span><span class="n">y</span><span class="w"> </span><span class="n">cobertura</span><span class="w"> </span><span class="n">register</span><span class="w"> </span><span class="n">Observaciones.sitio</span><span class="w"> </span><span class="n">id</span><span class="w">   </span><span class="n">DAP1.BA</span><span class="w"> </span><span class="n">DAP2.BA</span><span class="w"> </span><span class="n">DAP3.BA</span><span class="w"> </span><span class="n">DAP4.BA</span><span class="w"> </span><span class="n">DAP5.BA</span><span class="w"> </span><span class="n">DAP6.BA</span><span class="w">
</span><span class="m">1</span><span class="w"> </span><span class="m">104</span><span class="err">°</span><span class="m">06.428</span><span class="w">     </span><span class="m">70-80</span><span class="w">      </span><span class="n">Yan</span><span class="w">                </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">  </span><span class="m">1</span><span class="w">  </span><span class="m">9.294088</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">
</span><span class="m">2</span><span class="w"> </span><span class="m">104</span><span class="err">°</span><span class="m">06.428</span><span class="w">     </span><span class="m">70-80</span><span class="w">      </span><span class="n">Yan</span><span class="w">                </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">  </span><span class="m">2</span><span class="w"> </span><span class="m">36.423704</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">
</span><span class="m">3</span><span class="w"> </span><span class="m">104</span><span class="err">°</span><span class="m">06.428</span><span class="w">     </span><span class="m">70-80</span><span class="w">      </span><span class="n">Yan</span><span class="w">                </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">  </span><span class="m">3</span><span class="w">  </span><span class="m">7.645380</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">
</span><span class="m">4</span><span class="w"> </span><span class="m">104</span><span class="err">°</span><span class="m">06.428</span><span class="w">     </span><span class="m">70-80</span><span class="w">      </span><span class="n">Yan</span><span class="w">                </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">  </span><span class="m">4</span><span class="w"> </span><span class="m">59.720420</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">
</span><span class="m">5</span><span class="w"> </span><span class="m">104</span><span class="err">°</span><span class="m">06.428</span><span class="w">     </span><span class="m">70-80</span><span class="w">      </span><span class="n">Yan</span><span class="w">                </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">  </span><span class="m">5</span><span class="w"> </span><span class="m">12.818955</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">
</span><span class="m">6</span><span class="w"> </span><span class="m">104</span><span class="err">°</span><span class="m">06.428</span><span class="w">     </span><span class="m">70-80</span><span class="w">      </span><span class="n">Yan</span><span class="w">                </span><span class="o">&lt;</span><span class="kc">NA</span><span class="o">&gt;</span><span class="w">  </span><span class="m">6</span><span class="w">  </span><span class="m">8.761588</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">
  </span><span class="n">DAP7.BA</span><span class="w"> </span><span class="n">DAP8.BA</span><span class="w"> </span><span class="n">DAP9.BA</span><span class="w"> </span><span class="n">DAP10.BA</span><span class="w"> </span><span class="n">DAP11.BA</span><span class="w"> </span><span class="n">DAP12.BA</span><span class="w"> </span><span class="n">DAP13.BA</span><span class="w"> </span><span class="n">DAP14.BA</span><span class="w"> </span><span class="n">DAP15.BA</span><span class="w"> </span><span class="n">DAP16.BA</span><span class="w"> </span><span class="n">DAP17.BA</span><span class="w"> </span><span class="n">DAP18.BA</span><span class="w">
</span><span class="m">1</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">2</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">3</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">4</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">5</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">6</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">      </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
  </span><span class="n">DAP19.BA</span><span class="w"> </span><span class="n">DAP20.BA</span><span class="w"> </span><span class="n">DAP21.BA</span><span class="w"> </span><span class="n">DAP22.BA</span><span class="w"> </span><span class="n">DAP23.BA</span><span class="w"> </span><span class="n">DAP24.BA</span><span class="w">
</span><span class="m">1</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">2</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">3</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">4</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">5</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">
</span><span class="m">6</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span><span class="w">       </span><span class="kc">NA</span></code></pre></figure>

<p>and like the following for the <code class="language-plaintext highlighter-rouge">coords</code> file.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="w">      </span><span class="n">name</span><span class="w"> </span><span class="n">elevation</span><span class="w">       </span><span class="n">date</span><span class="w">         </span><span class="n">x</span><span class="w">        </span><span class="n">y</span><span class="w">     </span><span class="n">xutm</span><span class="w">    </span><span class="n">ytum</span><span class="w">
</span><span class="m">1</span><span class="w">   </span><span class="n">LIMON1</span><span class="w"> </span><span class="m">1118.1133</span><span class="w"> </span><span class="m">2022</span><span class="o">/</span><span class="m">05</span><span class="o">/</span><span class="m">12</span><span class="w"> </span><span class="m">-104.1652</span><span class="w"> </span><span class="m">19.83815</span><span class="w"> </span><span class="m">587412.5</span><span class="w"> </span><span class="m">2193788</span><span class="w">
</span><span class="m">2</span><span class="w"> </span><span class="n">AMACUAU1</span><span class="w">  </span><span class="m">998.5761</span><span class="w"> </span><span class="m">2022</span><span class="o">/</span><span class="m">05</span><span class="o">/</span><span class="m">13</span><span class="w"> </span><span class="m">-104.1071</span><span class="w"> </span><span class="m">19.89840</span><span class="w"> </span><span class="m">593460.8</span><span class="w"> </span><span class="m">2200486</span></code></pre></figure>

<h1 id="fix-taxonomy-and-get-wood-density-for-agb-calculation">Fix taxonomy and get wood density for AGB calculation</h1>

<p>The first step is to get the corrected names of the species registered in the field. This information will be used to get the wood density by species, genus or family, depending on what info is available in the global woodensity database. Then this wood density is going to be used to calculate AGB as</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Separate genus and species</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">genus</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_extract</span><span class="p">(</span><span class="n">Especie</span><span class="p">,</span><span class="w"> </span><span class="s2">"[A-z]+(?= )"</span><span class="p">),</span><span class="w">
         </span><span class="n">species</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_extract</span><span class="p">(</span><span class="n">Especie</span><span class="p">,</span><span class="w"> </span><span class="s2">"(?&lt;= )[A-z]+(?=)"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">across</span><span class="p">(</span><span class="n">species</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="n">gsub</span><span class="p">(</span><span class="s2">"sp|sp."</span><span class="p">,</span><span class="s2">"NA"</span><span class="p">,</span><span class="n">.x</span><span class="p">)))</span><span class="w">

</span><span class="c1"># Correct taxo names</span><span class="w">
</span><span class="n">taxo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">correctTaxo</span><span class="p">(</span><span class="n">genus</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">genus</span><span class="p">,</span><span class="w"> 
                    </span><span class="n">species</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">species</span><span class="p">,</span><span class="w"> 
                    </span><span class="n">useCache</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">F</span><span class="p">,</span><span class="w"> 
                    </span><span class="n">verbose</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">

</span><span class="c1"># Add as new columns</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">genuscorr</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">taxo</span><span class="o">$</span><span class="n">genusCorrected</span><span class="p">,</span><span class="w">
         </span><span class="n">speciescorr</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">taxo</span><span class="o">$</span><span class="n">speciesCorrected</span><span class="p">)</span><span class="w">

</span><span class="c1"># Get family according to APG 3</span><span class="w">
</span><span class="n">APG</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getTaxonomy</span><span class="p">(</span><span class="n">df</span><span class="o">$</span><span class="n">genuscorr</span><span class="p">,</span><span class="w"> </span><span class="n">findOrder</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">

</span><span class="c1"># Add to original df</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">family</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">APG</span><span class="o">$</span><span class="n">family</span><span class="p">)</span><span class="w">

</span><span class="c1"># Get wood density</span><span class="w">
</span><span class="n">dataWD</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getWoodDensity</span><span class="p">(</span><span class="w">
  </span><span class="n">genus</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">genuscorr</span><span class="p">,</span><span class="w">
  </span><span class="n">species</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">speciescorr</span><span class="p">,</span><span class="w">
  </span><span class="n">family</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">family</span><span class="p">,</span><span class="w">
  </span><span class="n">region</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"World"</span><span class="p">,</span><span class="w">
  </span><span class="n">stand</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">df</span><span class="o">$</span><span class="n">parcela</span><span class="w">
</span><span class="p">)</span><span class="w">

</span><span class="c1"># add as columns to df</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">meanwood</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dataWD</span><span class="o">$</span><span class="n">meanWD</span><span class="p">,</span><span class="w">
         </span><span class="n">sdwood</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dataWD</span><span class="o">$</span><span class="n">sdWD</span><span class="p">,</span><span class="w">
         </span><span class="n">levelwood</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dataWD</span><span class="o">$</span><span class="n">levelWD</span><span class="p">,</span><span class="w">
         </span><span class="n">nInd</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dataWD</span><span class="o">$</span><span class="n">nInd</span><span class="p">)</span><span class="w">

</span><span class="c1"># Compute AGB for all DAP</span><span class="w">
</span><span class="n">df_agb</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">across</span><span class="p">(</span><span class="n">matches</span><span class="p">(</span><span class="s2">"DAP[0-9]+$"</span><span class="p">),</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">computeAGB</span><span class="p">(</span><span class="n">D</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="p">,</span><span class="w">
                                                    </span><span class="n">WD</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">meanwood</span><span class="p">,</span><span class="w">
                                                    </span><span class="n">H</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Altura</span><span class="p">)))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">matches</span><span class="p">(</span><span class="s2">"DAP[0-9]+$"</span><span class="p">))</span><span class="w">

</span><span class="n">colnames</span><span class="p">(</span><span class="n">df_agb</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"id"</span><span class="p">,</span><span class="w"> </span><span class="n">paste0</span><span class="p">((</span><span class="s2">"AGB"</span><span class="p">),</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">24</span><span class="p">)))</span><span class="w">

</span><span class="c1"># Join AGB by id</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">df_agb</span><span class="p">,</span><span class="w"> </span><span class="s2">"id"</span><span class="p">)</span></code></pre></figure>

<p>After these steps we now got the individual AGB for each stem and individual, as new columns of the original df. So the next step is going to calculate these same metrics for each individual (e.g., individual AGB sum of all of its stems). Watch that you might need to change some parameters of the <code class="language-plaintext highlighter-rouge">subplot_size</code> definition according to your own sampling design.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Max DAP, plot extent</span><span class="w">
</span><span class="n">subplot_size</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">matches</span><span class="p">(</span><span class="s2">"DAP[0-9]+$"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="n">id</span><span class="p">,</span><span class="w"> 
               </span><span class="n">names_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"AGB"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">drop_na</span><span class="p">(</span><span class="n">value</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">DAP_max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">max</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">subplot_size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">case_when</span><span class="p">(</span><span class="n">DAP_max</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">5</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="m">500</span><span class="p">,</span><span class="w">
                                  </span><span class="n">DAP_max</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">2.5</span><span class="w"> </span><span class="o">&amp;</span><span class="w"> </span><span class="n">DAP_max</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">5</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="m">29</span><span class="p">,</span><span class="w">
                                  </span><span class="n">DAP_max</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">2.5</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">

</span><span class="c1"># AGB sum</span><span class="w">
</span><span class="n">AGB</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">starts_with</span><span class="p">(</span><span class="s2">"AGB"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="n">id</span><span class="p">,</span><span class="w"> 
               </span><span class="n">names_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"AGB"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">drop_na</span><span class="p">(</span><span class="n">value</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">AGB_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w">

</span><span class="c1"># number of stems</span><span class="w">
</span><span class="n">Stems</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">starts_with</span><span class="p">(</span><span class="s2">"AGB"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="n">id</span><span class="p">,</span><span class="w"> 
               </span><span class="n">names_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"AGB"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">drop_na</span><span class="p">(</span><span class="n">value</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">Stem_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="w">

</span><span class="c1"># Basal area</span><span class="w">
</span><span class="n">BA</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">ends_with</span><span class="p">(</span><span class="s2">"BA"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="n">id</span><span class="p">,</span><span class="w"> 
               </span><span class="n">names_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"BA"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">drop_na</span><span class="p">(</span><span class="n">value</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">BA_sum</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">value</span><span class="p">))</span><span class="w">

</span><span class="c1"># Join previous calculation to original df</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">AGB</span><span class="p">,</span><span class="w"> </span><span class="s2">"id"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">BA</span><span class="p">,</span><span class="w"> </span><span class="s2">"id"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">Stems</span><span class="p">,</span><span class="w"> </span><span class="s2">"id"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">subplot_size</span><span class="p">,</span><span class="w"> </span><span class="s2">"id"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Select variables of interest</span><span class="w">
</span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">parcela</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">cobertura</span><span class="p">,</span><span class="w"> </span><span class="n">Observaciones.sitio</span><span class="p">,</span><span class="w"> 
         </span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">subplot_size</span><span class="p">,</span><span class="w"> </span><span class="n">AGB_sum</span><span class="p">,</span><span class="w"> </span><span class="n">BA_sum</span><span class="p">,</span><span class="w"> </span><span class="n">Stem_sum</span><span class="p">,</span><span class="w"> </span><span class="n">Altura</span><span class="p">,</span><span class="w"> 
         </span><span class="n">genuscorr</span><span class="p">,</span><span class="w"> </span><span class="n">speciescorr</span><span class="p">,</span><span class="w"> </span><span class="n">meanwood</span><span class="p">,</span><span class="w"> </span><span class="n">levelwood</span><span class="p">,</span><span class="w">
         </span><span class="n">register</span><span class="p">)</span><span class="w"> </span></code></pre></figure>

<p>Now that we have the individual measures we need to calculate the per plot variables: AGBplot, BAplot, Dplot, Stemplot, Hmplot, H10plot. Since some of these measures are sums, extrapolated to 1 ha sums, means, etc, each one is summarised using the most common function to calculate it (e.g., AGB sum, height mean). Finally, we assume that the best registered coordinates are located in the  <code class="language-plaintext highlighter-rouge">coords</code> file; thus, these coordinates are pasted on to the final result.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># -------------------Per plot variables------------------------------</span><span class="w">
</span><span class="c1"># Summarise variables that need to be extrapolated</span><span class="w">
</span><span class="n">vars1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">parcela</span><span class="p">,</span><span class="w"> </span><span class="n">subplot_size</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="c1"># Sums by subplot_size</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">AGBsubplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">AGB_sum</span><span class="p">),</span><span class="w">
            </span><span class="n">BAsubplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">BA_sum</span><span class="p">)</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="m">10000</span><span class="p">,</span><span class="w">
            </span><span class="n">Dsubplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">(),</span><span class="w">
            </span><span class="n">Stemsubplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Stem_sum</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="c1"># Extrapolate to 1 ha according to the subplot size</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">across</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="n">AGBsubplot</span><span class="p">,</span><span class="w"> </span><span class="n">BAsubplot</span><span class="p">,</span><span class="w"> </span><span class="n">Dsubplot</span><span class="p">,</span><span class="w"> </span><span class="n">Stemsubplot</span><span class="p">),</span><span class="w"> </span><span class="o">~</span><span class="n">.x</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">10000</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">subplot_size</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">parcela</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="c1"># Sum both subplot estimates</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">AGBplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">AGBsubplot</span><span class="p">),</span><span class="w">
            </span><span class="n">BAplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">BAsubplot</span><span class="p">),</span><span class="w">
            </span><span class="n">Dplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Dsubplot</span><span class="p">),</span><span class="w">
            </span><span class="n">Stemplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">Stemsubplot</span><span class="p">))</span><span class="w">

</span><span class="c1"># Calculate top 10 mean height</span><span class="w">
</span><span class="n">vars2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">parcela</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">slice_max</span><span class="p">(</span><span class="n">Altura</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">H10plot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">Altura</span><span class="p">))</span><span class="w">

</span><span class="c1"># Cover</span><span class="w">
</span><span class="n">vars3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">parcela</span><span class="p">,</span><span class="w"> </span><span class="n">cobertura</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">separate</span><span class="p">(</span><span class="n">col</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">cobertura</span><span class="p">,</span><span class="w"> 
           </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"-"</span><span class="p">,</span><span class="w">
           </span><span class="n">into</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"cob1"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cob2"</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">across</span><span class="p">(</span><span class="n">starts_with</span><span class="p">(</span><span class="s2">"cob"</span><span class="p">),</span><span class="w"> </span><span class="o">~</span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">.x</span><span class="p">)))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">parcela</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">cob</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="n">cob1</span><span class="p">,</span><span class="w"> </span><span class="n">cob2</span><span class="p">),</span><span class="w"> </span><span class="n">na.rm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">))</span><span class="w">

</span><span class="c1"># Mean height</span><span class="w">
</span><span class="n">vars4</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">parcela</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">summarise</span><span class="p">(</span><span class="n">Hmplot</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">mean</span><span class="p">(</span><span class="n">Altura</span><span class="p">))</span><span class="w">

</span><span class="c1"># Join all calculations</span><span class="w">
</span><span class="n">resul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">vars1</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">vars2</span><span class="p">,</span><span class="w"> </span><span class="s2">"parcela"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">vars3</span><span class="p">,</span><span class="w"> </span><span class="s2">"parcela"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">df</span><span class="w"> </span><span class="o">|&gt;</span><span class="w"> 
              </span><span class="n">select</span><span class="p">(</span><span class="nf">c</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">parcela</span><span class="p">))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
              </span><span class="n">distinct</span><span class="p">(</span><span class="n">parcela</span><span class="p">,</span><span class="w"> </span><span class="n">.keep_all</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">),</span><span class="w">
            </span><span class="s2">"parcela"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">vars4</span><span class="p">,</span><span class="w"> </span><span class="s2">"parcela"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">parcela</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">cob</span><span class="p">,</span><span class="w"> </span><span class="n">AGBplot</span><span class="p">,</span><span class="w"> </span><span class="n">BAplot</span><span class="p">,</span><span class="w"> </span><span class="n">Dplot</span><span class="p">,</span><span class="w"> </span><span class="n">Stemplot</span><span class="p">,</span><span class="w"> </span><span class="n">Hmplot</span><span class="p">,</span><span class="w"> </span><span class="n">H10plot</span><span class="p">)</span><span class="w">

</span><span class="c1"># Rename columns</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">resul</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Plot"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Lat"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Long"</span><span class="p">,</span><span class="w">
                     </span><span class="s2">"Cob(%)"</span><span class="p">,</span><span class="w"> </span><span class="s2">"AGB(Mgha-1)"</span><span class="p">,</span><span class="w"> </span><span class="s2">"BA(m2ha-1)"</span><span class="p">,</span><span class="w">
                     </span><span class="s2">"Dplot(indha-1)"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Stemplot(stemha-1)"</span><span class="p">,</span><span class="w">
                     </span><span class="s2">"Hmean(m)"</span><span class="p">,</span><span class="w"> </span><span class="s2">"H10mean(m)"</span><span class="p">)</span><span class="w">

</span><span class="n">resul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">resul</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="nf">c</span><span class="p">(</span><span class="n">Lat</span><span class="p">,</span><span class="w"> </span><span class="n">Long</span><span class="p">))</span><span class="w">

</span><span class="n">coords</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">coords</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">rename</span><span class="p">(</span><span class="s2">"yutm"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"ytum"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">elevation</span><span class="p">,</span><span class="w"> </span><span class="n">date</span><span class="p">,</span><span class="w"> </span><span class="n">xutm</span><span class="p">,</span><span class="w"> </span><span class="n">yutm</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">across</span><span class="p">(</span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="n">str_to_title</span><span class="p">(</span><span class="n">.x</span><span class="p">)))</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">rename</span><span class="p">(</span><span class="s2">"Plot"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"name"</span><span class="p">)</span><span class="w">

</span><span class="n">resul</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">resul</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">left_join</span><span class="p">(</span><span class="n">coords</span><span class="p">,</span><span class="w"> </span><span class="s2">"Plot"</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">Plot</span><span class="p">,</span><span class="w"> </span><span class="n">xutm</span><span class="p">,</span><span class="w"> </span><span class="n">yutm</span><span class="p">,</span><span class="w"> </span><span class="n">everything</span><span class="p">())</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">year</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2022</span><span class="p">)</span></code></pre></figure>

<p>Results look like the following.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># A tibble: 2 × 13</span><span class="w">
  </span><span class="n">Plot</span><span class="w">     </span><span class="n">xutm</span><span class="w">   </span><span class="n">yutm</span><span class="w"> </span><span class="n">`Cob(%)`</span><span class="w"> </span><span class="n">`AGB(Mgha-1)`</span><span class="w"> </span><span class="n">`BA(m2ha-1)`</span><span class="w"> </span><span class="n">`Dplot(indha-1)`</span><span class="w"> </span><span class="n">`Stemplot(stemha-1)`</span><span class="w"> </span><span class="n">`Hmean(m)`</span><span class="w">
  </span><span class="o">&lt;</span><span class="n">chr</span><span class="o">&gt;</span><span class="w">   </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">  </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">    </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">         </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">        </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">            </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">                </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">      </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w"> </span><span class="n">Amacu</span><span class="err">…</span><span class="w"> </span><span class="m">5.93e5</span><span class="w"> </span><span class="m">2.20e6</span><span class="w">       </span><span class="m">75</span><span class="w">          </span><span class="m">37.6</span><span class="w">         </span><span class="m">18.2</span><span class="w">            </span><span class="m">2919</span><span class="n">.</span><span class="w">                </span><span class="m">5159</span><span class="n">.</span><span class="w">       </span><span class="m">4.46</span><span class="w">
</span><span class="m">2</span><span class="w"> </span><span class="n">Limon1</span><span class="w"> </span><span class="m">5.87e5</span><span class="w"> </span><span class="m">2.19e6</span><span class="w">       </span><span class="m">75</span><span class="w">          </span><span class="m">52.8</span><span class="w">         </span><span class="m">29.4</span><span class="w">            </span><span class="m">2130</span><span class="n">.</span><span class="w">                </span><span class="m">4410</span><span class="n">.</span><span class="w">       </span><span class="m">3.77</span><span class="w">
</span><span class="c1"># ℹ 4 more variables: `H10mean(m)` &lt;dbl&gt;, elevation &lt;dbl&gt;, date &lt;chr&gt;, year &lt;dbl&gt;</span></code></pre></figure>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="BiOMASS" /><category term="AGB" /><category term="community attributes" /><category term="plot-level calculations" /><summary type="html"><![CDATA[AGB forest sampling calculations]]></summary></entry><entry><title type="html">Rasters and vectors with terra</title><link href="http://localhost:4000/blog/rasters-and-vectors-with-terra/" rel="alternate" type="text/html" title="Rasters and vectors with terra" /><published>2023-07-14T10:35:00-06:00</published><updated>2023-07-14T10:35:00-06:00</updated><id>http://localhost:4000/blog/rasters-and-vectors-with-terra</id><content type="html" xml:base="http://localhost:4000/blog/rasters-and-vectors-with-terra/"><![CDATA[<h1 id="rasters-and-vectors-with-terra">Rasters and vectors with terra</h1>

<p>This post shows a simple example of how to work with rasters and vectors using the terra package. Terra replaces the older raster package, since terra is usually faster to use.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">tibble</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">terra</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span></code></pre></figure>

<p>Then create some objects to work with and plot them.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">im1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rast</span><span class="p">(</span><span class="n">matrix</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="m">9</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">),</span><span class="w">
            </span><span class="n">crs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"EPSG:4326"</span><span class="p">,</span><span class="w">
            </span><span class="n">extent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">-103</span><span class="p">,</span><span class="m">-100</span><span class="p">,</span><span class="m">19</span><span class="p">,</span><span class="m">22</span><span class="p">))</span><span class="w">

</span><span class="n">pts1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">vect</span><span class="p">(</span><span class="n">data.frame</span><span class="p">(</span><span class="n">lon</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">-102.5</span><span class="p">,</span><span class="w"> </span><span class="m">-102.5</span><span class="p">,</span><span class="w"> </span><span class="m">-100.5</span><span class="p">,</span><span class="w"> </span><span class="m">-100.5</span><span class="p">),</span><span class="w">
                        </span><span class="n">lat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">19.5</span><span class="p">,</span><span class="w"> </span><span class="m">21.5</span><span class="p">,</span><span class="w"> </span><span class="m">21.5</span><span class="p">,</span><span class="w"> </span><span class="m">19.5</span><span class="p">)),</span><span class="w">
             </span><span class="n">geom</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"lon"</span><span class="p">,</span><span class="w"> </span><span class="s2">"lat"</span><span class="p">),</span><span class="w"> 
             </span><span class="n">crs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"EPSG:4326"</span><span class="p">)</span><span class="w">

</span><span class="n">poly1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">vect</span><span class="p">(</span><span class="s2">"POLYGON ((-102.5 19.5, -102.5 21.5, -100.5 21.5, -100.5 19.5, -102.5 19.5))"</span><span class="p">,</span><span class="w">
             </span><span class="n">crs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"EPSG:4326"</span><span class="p">)</span><span class="w">

</span><span class="n">plot</span><span class="p">(</span><span class="n">im1</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">pts1</span><span class="p">,</span><span class="w"> </span><span class="n">add</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">poly1</span><span class="p">,</span><span class="w"> </span><span class="n">add</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra1.png"><img src="http://localhost:4000/assets/images/terra1.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Data.</p>

<h1 id="vector-operations">Vector operations</h1>

<h2 id="buffer">Buffer</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">poly2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">buffer</span><span class="p">(</span><span class="n">poly1</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10000</span><span class="p">,</span><span class="w"> </span><span class="n">capstyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"square"</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">poly2</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">poly1</span><span class="p">,</span><span class="w"> </span><span class="n">add</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra2.png"><img src="http://localhost:4000/assets/images/terra2.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Buffer.</p>

<h2 id="intersection">Intersection</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">poly3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">intersect</span><span class="p">(</span><span class="n">poly2</span><span class="p">,</span><span class="w"> </span><span class="n">poly1</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">poly3</span><span class="p">[[</span><span class="m">1</span><span class="p">]])</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra3.png"><img src="http://localhost:4000/assets/images/terra3.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Intersection.</p>

<h1 id="raster-operations">Raster operations</h1>

<h2 id="mask-values">Mask values</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">im2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">im1</span><span class="w">
</span><span class="n">im2</span><span class="p">[</span><span class="n">im2</span><span class="o">&gt;=</span><span class="m">5</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NA</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">im2</span><span class="p">)</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra4.png"><img src="http://localhost:4000/assets/images/terra4.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Masked raster.</p>

<h2 id="operations-over-all-cells">Operations over all cells</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Stack same image</span><span class="w">
</span><span class="n">im3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">im1</span><span class="p">,</span><span class="w"> </span><span class="n">im1</span><span class="p">)</span><span class="w">

</span><span class="n">im4</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">app</span><span class="p">(</span><span class="n">im3</span><span class="p">,</span><span class="w"> </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"sum"</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">im4</span><span class="p">)</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra5.png"><img src="http://localhost:4000/assets/images/terra5.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Sum of both bands.</p>

<h2 id="global-operations">Global operations</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">global</span><span class="p">(</span><span class="n">im1</span><span class="p">,</span><span class="w"> </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"mean"</span><span class="p">)</span><span class="w">
      </span><span class="n">mean</span><span class="w">
</span><span class="n">lyr.1</span><span class="w">    </span><span class="m">5</span></code></pre></figure>

<h2 id="focal-operations">Focal operations</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">im5</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">focal</span><span class="p">(</span><span class="n">im1</span><span class="p">,</span><span class="w"> </span><span class="n">w</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">fun</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"max"</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">im5</span><span class="p">)</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra6.png"><img src="http://localhost:4000/assets/images/terra6.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Focal max.</p>

<h1 id="raster-vector-operations">Raster vector operations</h1>

<h2 id="crop">Crop</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">im1_c</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">crop</span><span class="p">(</span><span class="n">im1</span><span class="p">,</span><span class="w"> </span><span class="n">poly1</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">im1_c</span><span class="p">)</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra7.png"><img src="http://localhost:4000/assets/images/terra7.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Cropped images.</p>

<h2 id="mask">Mask</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">im2_c</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mask</span><span class="p">(</span><span class="n">im1</span><span class="p">,</span><span class="w"> </span><span class="n">poly1</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">im2_c</span><span class="p">)</span></code></pre></figure>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/terra8.png"><img src="http://localhost:4000/assets/images/terra8.png" alt="styled-image" class="align-center" style="width: 30%;" /></a> Masked image (seems nothing happened due to overlap between raster and polygon).</p>

<h2 id="extract-values">Extract values</h2>

<h3 id="manual-colors">Manual colors</h3>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">expts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">extract</span><span class="p">(</span><span class="n">im1</span><span class="p">,</span><span class="w"> </span><span class="n">pts1</span><span class="p">)</span><span class="w">

</span><span class="c1"># Get x and y coordinates and value</span><span class="w">
</span><span class="n">geom</span><span class="p">(</span><span class="n">pts1</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">as_tibble</span><span class="p">()</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">value</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">expts</span><span class="o">|&gt;</span><span class="n">pull</span><span class="p">(</span><span class="n">lyr.1</span><span class="p">))</span><span class="w">

</span><span class="c1"># A tibble: 4 × 3</span><span class="w">
      </span><span class="n">x</span><span class="w">     </span><span class="n">y</span><span class="w"> </span><span class="n">value</span><span class="w">
  </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">dbl</span><span class="o">&gt;</span><span class="w"> </span><span class="o">&lt;</span><span class="n">int</span><span class="o">&gt;</span><span class="w">
</span><span class="m">1</span><span class="w"> </span><span class="m">-102</span><span class="n">.</span><span class="w">  </span><span class="m">19.5</span><span class="w">     </span><span class="m">3</span><span class="w">
</span><span class="m">2</span><span class="w"> </span><span class="m">-102</span><span class="n">.</span><span class="w">  </span><span class="m">21.5</span><span class="w">     </span><span class="m">1</span><span class="w">
</span><span class="m">3</span><span class="w"> </span><span class="m">-100</span><span class="n">.</span><span class="w">  </span><span class="m">21.5</span><span class="w">     </span><span class="m">7</span><span class="w">
</span><span class="m">4</span><span class="w"> </span><span class="m">-100</span><span class="n">.</span><span class="w">  </span><span class="m">19.5</span><span class="w">     </span><span class="m">9</span></code></pre></figure>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="ggplot2" /><category term="plot" /><category term="grammar of graphics" /><category term="figures" /><summary type="html"><![CDATA[Rasters and vectors with terra]]></summary></entry><entry><title type="html">Working with LiDAR data in R</title><link href="http://localhost:4000/blog/working-with-lidar/" rel="alternate" type="text/html" title="Working with LiDAR data in R" /><published>2023-06-22T08:10:30-06:00</published><updated>2023-06-22T08:10:30-06:00</updated><id>http://localhost:4000/blog/working-with-lidar</id><content type="html" xml:base="http://localhost:4000/blog/working-with-lidar/"><![CDATA[<h1 id="working-with-lidar-data-in-r">Working with LiDAR data in R</h1>

<p>For this example we are going to use the <code class="language-plaintext highlighter-rouge">lidR</code> package. Additionally, we are going to load <code class="language-plaintext highlighter-rouge">terra</code> <code class="language-plaintext highlighter-rouge">sf</code> and <code class="language-plaintext highlighter-rouge">dplyr</code>. In this example, we will work with lascatalogs, which enables working with several las files at once.</p>

<p>The first thing is to load the LiDAR data as a catalog and load a shapefile with the areas of interest (that can correspond to in-field measurements). Reading data as a catalog enables refering to the original files without loading all of them into memory.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">lidR</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">terra</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">sf</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">

</span><span class="c1"># Load files</span><span class="w">
</span><span class="n">archivos</span><span class="o">&lt;-</span><span class="n">list.files</span><span class="p">(</span><span class="s2">"."</span><span class="p">,</span><span class="w">
    </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"*.las"</span><span class="p">,</span><span class="w">
    </span><span class="n">full.names</span><span class="o">=</span><span class="nb">T</span><span class="p">)</span><span class="w">
</span><span class="n">lidares</span><span class="o">&lt;-</span><span class="n">readLAScatalog</span><span class="p">(</span><span class="n">archivos</span><span class="p">)</span><span class="w">

</span><span class="c1"># Load plots data</span><span class="w">
</span><span class="n">ptos</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Data/Plots.csv"</span><span class="p">)</span></code></pre></figure>

<p>Since <code class="language-plaintext highlighter-rouge">ptos</code> is a csv table, first we need to transform it to an sf object and then project it in the same crs as the LiDAR data (EPSG:32615). So lets do that by first indicating the crs in which the coordinates in the original table are and then transforming them to the target EPSG and then create a buffer of radius = 10 m. We also can select only the columns of interest and rename it.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">ptos</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_as_sf</span><span class="p">(</span><span class="n">ptos</span><span class="p">,</span><span class="w"> 
                  </span><span class="n">coords</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"Easting_Geo"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Northing_Geo"</span><span class="p">),</span><span class="w">
                  </span><span class="n">crs</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">4326</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">st_transform</span><span class="p">(</span><span class="m">32615</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">st_buffer</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">Id_parcela</span><span class="p">)</span><span class="w"> </span><span class="o">|&gt;</span><span class="w">
  </span><span class="n">rename</span><span class="p">(</span><span class="s2">"PLOT_ID"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Id_parcela"</span><span class="p">)</span></code></pre></figure>

<p>Now, lets check if everything is ok. First, lets run some tests to see if everything is ok.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">las_check</span><span class="p">(</span><span class="n">lidares</span><span class="p">)</span></code></pre></figure>

<p>Now let’s check if both datasets have the same crs and overlap. In this case, I will select a single property of the <code class="language-plaintext highlighter-rouge">sf</code> object named “Id_parcela”.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">plot</span><span class="p">(</span><span class="n">lidares</span><span class="p">)</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">ptos</span><span class="p">[</span><span class="s2">"Id_parcela"</span><span class="p">],</span><span class="w"> </span><span class="n">add</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span></code></pre></figure>

<p>You should see something similar to the following image:</p>

<p style="text-align: center; font-size:0.75em;"><a href="http://localhost:4000/assets/images/yaxlidarptos.png"><img src="http://localhost:4000/assets/images/yaxlidarptos.png" alt="styled-image" class="align-center" style="width: 90%;" /></a> Example of spatial overlap between the liDAR data and field plots.</p>

<p>After making those tests, we are ready to process the data.</p>

<p>Since we are working with a LAScatalog, in order to calculate the metrics of interest we can focus to work with only the places where we have field data (ptos). Thus, we can clip the field data plots to the las catalog. There could be plots that do not fall inside the LiDAR data, so we can filter just to stay with the ones that have LiDAR associated data.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">ext_lidares</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ext</span><span class="p">(</span><span class="n">lidares</span><span class="p">)</span><span class="w">
</span><span class="n">ptos</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">st_crop</span><span class="p">(</span><span class="n">ptos</span><span class="p">,</span><span class="w">
                </span><span class="n">ext_lidares</span><span class="p">)</span></code></pre></figure>

<p>The next step is creating a digital terrain model (DTM) using a knn nearest neighbor algorithm. Here you can select another algorithm such as knnidw, tin and kriging.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">dtm</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rasterize_terrain</span><span class="p">(</span><span class="n">lidares</span><span class="p">,</span><span class="w">
                         </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w">
                         </span><span class="n">algorithm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">knnidw</span><span class="p">(</span><span class="n">k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">6L</span><span class="p">,</span><span class="w"> </span><span class="n">p</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">))</span><span class="w">
</span><span class="n">plot</span><span class="p">(</span><span class="n">dtm</span><span class="p">)</span><span class="w">                         </span></code></pre></figure>

<p>Then we can use the DTM to subtract those values to the vegetation points in order to get the vegetation height values. This is usually known as normalization. Here we need to set additional options to process chunks.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Set output for normalized data, here I will use a files folder</span><span class="w">
</span><span class="n">opt_chunk_size</span><span class="p">(</span><span class="n">lidares</span><span class="p">)</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="w">
</span><span class="n">opt_output_files</span><span class="p">(</span><span class="n">lidares</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w">  </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"files"</span><span class="p">,</span><span class="w"> </span><span class="s2">"/{*}_norm"</span><span class="p">)</span><span class="w">
</span><span class="n">nlas</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">normalize_height</span><span class="p">(</span><span class="n">lidares</span><span class="p">,</span><span class="w"> 
                         </span><span class="n">algorithm</span><span class="w">  </span><span class="o">=</span><span class="w"> </span><span class="n">tin</span><span class="p">(),</span><span class="w">
                         </span><span class="n">dtm</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">dtm</span><span class="p">)</span></code></pre></figure>

<p>The next step is to get the point cloud metrics by plot. In this case, we are going to use the default std metrics from z. Here you can set any function using the folowing notation: <code class="language-plaintext highlighter-rouge">~list(q10 = quantile(Z, probs = 0.10),q95 = quantile(Z, probs = 0.95))</code>. Before running the following code, we need to change the options to export the files produced for each plot. Here I will use the pattern “ID” to get each file with a consecutive number.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">opt_output_files</span><span class="p">(</span><span class="n">nlas</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w">  </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"files"</span><span class="p">,</span><span class="w"> </span><span class="s2">"/{ID}"</span><span class="p">)</span><span class="w">
</span><span class="n">metrics</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">plot_metrics</span><span class="p">(</span><span class="n">nlas</span><span class="p">,</span><span class="w"> 
                        </span><span class="n">.stdmetrics_z</span><span class="p">,</span><span class="w">
                        </span><span class="n">ptos</span><span class="p">)</span></code></pre></figure>

<p>Finally, you will obtain a data frame with the plot’s ID and its corresponding z- metrics.</p>]]></content><author><name>Jonathan V. Solórzano</name></author><category term="blog" /><category term="post" /><category term="r" /><category term="LiDAR" /><category term="point cloud" /><category term="raster" /><category term="lidR" /><summary type="html"><![CDATA[Working with LiDAR data in R]]></summary></entry></feed>